# This is a basic workflow to help you get started with Actions

name: CI / CD with django test

# Controls when the workflow will run 
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch 
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab 
  workflow_call:
    secrets:
      ALLOWED_HOSTS:
        required: true
      REDIS_DATABASE_PORT:
        required: true
      FIREBASE_TYPE:
        required: true
      FIREBASE_PROJECT_ID:
        required: true
      FIREBASE_PRIVATE_KEY_ID:
        required: true
      FIREBASE_PRIVATE_KEY:
        required: true
      FIREBASE_CLIENT_EMAIL:
        required: true
      FIREBASE_CLIENT_ID:
        required: true
      FIREBASE_AUTH_URI:
        required: true
      FIREBASE_TOKEN_URI:
        required: true
      FIREBASE_AUTH_PROVIDER_X509_CERT_URL:
        required: true
      FIREBASE_CLIENT_X509_CERT_URL:
        required: true
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on 
    runs-on: ubuntu-latest
    services:
      postgres_main:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: djtesting
        ports:
          - 5432:5432
      redis_main:
        image: redis:6.2.7
        ports:
          - 6379:6379
    env:
      INTERNAL_IPS: '*'
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      REDIS_DATABASE_PORT: ${{ secrets.REDIS_DATABASE_PORT }}
      FIREBASE_TYPE: ${{ secrets.FIREBASE_TYPE }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
      FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
      FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
      FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
      FIREBASE_AUTH_URI: ${{ secrets.FIREBASE_AUTH_URI }}
      FIREBASE_TOKEN_URI: ${{ secrets.FIREBASE_TOKEN_URI }}
      FIREBASE_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}
      FIREBASE_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python 3.10.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.6

      - name: Install Requirements
        run: |
          pip install -r inexperienceds/requirements.txt
      - name: Run migration
        env:
          DEBUG: 1
          GITHUB: 1
          DJANGO_SECRET_KEY : CI_CD_TEST_KEY
          POSTGRES_DB: djtesting          
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          REDIS_DATABASE_PORT: 6379
        run: |
          cd inexperienceds && python manage.py migrate auth && python manage.py migrate --run-syncdb && python manage.py makemigrations
      - name: Run Tests
        env:
          DEBUG: 1
          GITHUB: 1
          DJANGO_SECRET_KEY : CI_CD_TEST_KEY
          POSTGRES_DB: djtesting          
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          REDIS_DATABASE_PORT: 6379
        run: |
          cd inexperienceds && python manage.py migrate --run-syncdb && python manage.py test